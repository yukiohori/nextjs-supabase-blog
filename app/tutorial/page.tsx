import type { Metadata } from 'next';
import Image from 'next/legacy/image';
import Link from 'next/link';

import { CodeBlock } from '@/components/organisms/CodeBlock';
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from '@/components/ui/Accordion';

const envBlock = `# Supabase
NEXT_PUBLIC_SUPABASE_URL=https://XXXXXXXXXXXXXXXXXXXXXX.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=XXXXXXXXXXXXXXXXXXXXXX
NEXT_PUBLIC_SUPABASE_BUCKET=https://XXXXXXXXXXXXXXXXXXXXXX.supabase.co/storage/v1/object/public

# Clerk
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=sk_test_XXXXXXXXXXXXXXXXXXXXXX
CLERK_SECRET_KEY=sk_test_XXXXXXXXXXXXXXXXXXXXXX

NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/dashboard

# Sitemap
BASE_URL=localhost:3000`;

const createSQL = `
create or replace function requesting_user_id()
returns text
language sql stable
as $$
  select nullif(current_setting('request.jwt.claims', true)::json->>'sub', '')::text;
$$;

create table
public.categories (
  id bigint generated by default as identity,
  created_at timestamp with time zone null default now(),
  name text not null,
  show boolean null default true,
  deleted boolean null default false,
  image_url text null,
  updated_at timestamp with time zone null,
  user_id text null default requesting_user_id (),
  constraint category_pkey primary key (id, name),
  constraint categories_id_key unique (id),
  constraint category_name_key unique (name)
) tablespace pg_default;

create table
  public.blogs (
    id bigint generated by default as identity,
    title character varying not null,
    content text not null,
    created_at timestamp with time zone not null default now(),
    user_id text not null default requesting_user_id (),
    thumbnail character varying not null,
    description character varying not null default 'description'::character varying,
    updated_at timestamp with time zone null,
    constraint blog_pkey primary key (id)
  ) tablespace pg_default;

create extension if not exists moddatetime schema extensions;
create trigger handle_blogs_updated_at before update on blogs
  for each row execute procedure moddatetime (updated_at);

create table
  public.blog_category (
    blog_id bigint not null,
    category_id bigint not null,
    created_at timestamp with time zone not null default now(),
    constraint blog_category_pkey primary key (blog_id, category_id),
    constraint blog_category_blog_id_fkey foreign key (blog_id) references blogs (id) on update cascade on delete cascade,
    constraint blog_category_category_id_fkey foreign key (category_id) references categories (id) on update cascade on delete cascade
  ) tablespace pg_default;
`;

export const metadata: Metadata = {
  title: 'TUTORIAL PAGE',
  description:
    'This is a tutorial page. You can see all the tutorials in this page.',
};

const TutorialIndex = () => {
  return (
    <div className="mx-auto flex max-w-screen-2xl flex-col items-center px-4 pb-8 md:px-8">
      <h1 className="mb-6 pt-32 text-center text-3xl font-bold">TUTORIAL</h1>
      <div className="min-h-[400px] w-full overflow-hidden">
        <Accordion type="single" collapsible className="w-full">
          <AccordionItem value="item-1">
            <AccordionTrigger>Getting started</AccordionTrigger>
            <AccordionContent>
              <p className="mb-2">1. Clone the repository</p>
              <CodeBlock>
                git clone https://github.com/yukiohori/nextjs-supabase-blog.git
              </CodeBlock>
              <p className="mb-2 mt-4">2. Change directory</p>
              <CodeBlock>cd nextjs-supabase-blog</CodeBlock>
              <p className="mb-2 mt-4">3. Install dependencies</p>
              <CodeBlock>yarn install</CodeBlock>
              <p className="mb-2 mt-4">4. Start the development server</p>
              <CodeBlock>yarn dev</CodeBlock>
              <p className="mb-2 mt-4">
                5. Open http://localhost:3000 in your browser
              </p>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem value="item-2">
            <AccordionTrigger>Setup env file (.env)</AccordionTrigger>
            <AccordionContent>
              <p className="mb-2">
                You have to create .env file in the root directory of this
                project.
              </p>
              <CodeBlock>{envBlock}</CodeBlock>
              <p className="mb-2 mt-4">
                <span className="font-bold">Supabase</span> env variables are
                required to connect to your Supabase.
                <br />
                You can get these values from your Supabase project.
                <br />
                Check here for more details:{' '}
                <Link
                  className="text-blue-500 underline"
                  href="https://supabase.com/docs/guides/getting-started/tutorials/with-nextjs"
                  target="_blank"
                >
                  https://supabase.com/docs/guides/getting-started/tutorials/with-nextjs
                </Link>
                <br />
                <br />
                <span className="font-bold">Supabase Storage</span> env value is
                required to connect to your Supabase Storage.
              </p>
              <p className="mb-2 mt-4">
                You need to create Category, Blogs and Blog_Category table.
                Please copy the code bellow and paste it to SQL Editor of
                <span className="font-bold"> Supabase</span>.
              </p>
              <CodeBlock>{createSQL}</CodeBlock>
              <p className="mb-2 mt-4">
                Please create a bucket in Supabase Storage. You can create a new
                bucket by clicking the &quot;New bucket&quot; button. Create
                buckets with the name &quot;category&quot; and &quot;blog&quot;.
              </p>
              <div className="relative max-w-lg">
                <Image
                  src="/assets/images/bucket-setup.png"
                  loading="lazy"
                  layout="responsive"
                  width={300}
                  height={400}
                  alt="Bucket Create"
                  className="rounded-lg"
                />
              </div>
              <div className="relative mt-4 max-w-xl">
                <Image
                  src="/assets/images/bucket-create.png"
                  loading="lazy"
                  layout="responsive"
                  width={500}
                  height={500}
                  alt="Bucket Create"
                  className="rounded-lg"
                />
              </div>
              <p className="mb-2 mt-4">
                Please setup the policy of Supabase Storage.
              </p>
              <div className="relative">
                <Image
                  src="/assets/images/bucket-policy.png"
                  loading="lazy"
                  layout="responsive"
                  width={700}
                  height={400}
                  alt="Bucket policy"
                  className="rounded-lg"
                />
              </div>
              <p className="mb-2 mt-4">
                Please setup the policy of Tables. (Categories, Blogs and
                Blog_Category)
              </p>
              <p className="mb-2 mt-4">SELECT</p>
              <div className="relative">
                <Image
                  src="/assets/images/blogs-select.png"
                  loading="lazy"
                  layout="responsive"
                  width={700}
                  height={400}
                  alt="Blogs SELECT"
                  className="rounded-lg"
                />
              </div>
              <p className="mb-2 mt-4">INSERT</p>
              <div className="relative">
                <Image
                  src="/assets/images/blogs-insert.png"
                  loading="lazy"
                  layout="responsive"
                  width={700}
                  height={400}
                  alt="Blogs INSERT"
                  className="rounded-lg"
                />
              </div>
              <p className="mb-2 mt-4">UPDATE</p>
              <div className="relative">
                <Image
                  src="/assets/images/blogs-update.png"
                  loading="lazy"
                  layout="responsive"
                  width={700}
                  height={400}
                  alt="Blogs UPDATE"
                  className="rounded-lg"
                />
              </div>
              <p className="mb-2 mt-4">DELETE</p>
              <div className="relative">
                <Image
                  src="/assets/images/blogs-delete.png"
                  loading="lazy"
                  layout="responsive"
                  width={700}
                  height={400}
                  alt="Blogs DELETE"
                  className="rounded-lg"
                />
              </div>

              <p className="mb-2 mt-4">
                <span className="font-bold">Clerk</span> env variables are
                required to connect to your Clerk.
                <br />
                You can get these values from your Clerk project.
                <br />
                Check here for more details:{' '}
                <Link
                  className="text-blue-500 underline"
                  href="https://clerk.com/docs/quickstarts/nextjs"
                  target="_blank"
                >
                  https://clerk.com/docs/quickstarts/nextjs
                </Link>
              </p>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem value="item-3">
            <AccordionTrigger>Generate Types Supabase</AccordionTrigger>
            <AccordionContent>
              <p className="mb-2">
                If you change the table, please generate types with the code
                below.
                <br /> XXXXXXXXXXXXXXXXXXX will be your Reference ID with you
                can find in Project Settings.
              </p>
              <CodeBlock>
                npx supabase gen types typescript --project-id
                &quot;XXXXXXXXXXXXXXXXXXX&quot; --schema public &gt;
                types/supabase.ts
              </CodeBlock>
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </div>
    </div>
  );
};

export default TutorialIndex;
